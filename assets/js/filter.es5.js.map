{"version":3,"sources":["webpack:///./src/js/filter.js"],"names":["input","document","getElementById","reset","sanitize","str","encodeURIComponent","replace","c","charCodeAt","toString","handleInputChange","td","i","filter","value","toUpperCase","tr","querySelector","getElementsByTagName","searchColumn","dataset","length","innerHTML","indexOf","style","display","handleResetSelect","window","params","URLSearchParams","location","search","filterValue","get","initializeFilter","addEventListener","handleURLSearchParams"],"mappings":"qcAAA,IAAMA,EACLC,SAASC,eAAgB,sBAEpBC,EACLF,SAASC,eAAgB,wBAOpBE,EAAW,SAA4BC,GAC5C,OAAOC,mBAAoBD,GAAME,QAAS,YAAY,SAAEC,GACvD,MAAO,IAAMA,EAAEC,WAAY,GAAIC,SAAU,QAOrCC,EAAoB,WACzB,IAIIC,EAAIC,EAJFC,EAASV,EAAUJ,EAAMe,MAAMC,eAE/BC,EADQhB,SAASiB,cAAe,oBACrBC,qBAAsB,MACjCC,EAAiBpB,EAAMqB,QAAQD,aAAepB,EAAMqB,QAAQD,aAAe,EAIjF,IAAMP,EAAI,EAAGA,EAAII,EAAGK,OAAQT,KAC3BD,EAAKK,EAAIJ,GAAIM,qBAAsB,MAAQC,EAAe,OAEnD,EAAIR,EAAGW,UAAUP,cAAcQ,QAASV,GAC7CG,EAAIJ,GAAIY,MAAMC,QAAU,GAExBT,EAAIJ,GAAIY,MAAMC,QAAU,SAStBC,EAAoB,WACzB3B,EAAMe,MAAQ,GACdJ,K,iDAMD,0GACM,oBAAqBiB,QAD3B,mBAEQC,EAAS,IAAIC,gBAAiBF,OAAOG,SAASC,QAG/C,QAFCC,EAAcJ,EAAOK,IAAK,WAHlC,uBAMGlC,EAAMe,MAAQX,EAAU6B,GAN3B,SAOStB,IAPT,4C,sBAee,SAASwB,IACvBnC,EAAMoC,iBAAkB,QAASzB,GACjCR,EAAMiC,iBAAkB,QAAST,G,mCACjCU","file":"filter.es5.js","sourcesContent":["const input = /** @type {!Element} */ (\n\tdocument.getElementById( 'search_table_input' ) );\n\nconst reset = /** @type {!Element} */ (\n\tdocument.getElementById( 'js-search-form-reset' ) );\n\n/*\n * Sanitizes a given string as an encoded URI component.\n *\n * @type {!string} str A string to be encoded.\n */\nconst sanitize = function encodeParamString( str ) {\n\treturn encodeURIComponent( str ).replace( /[!'()*]/g, ( c ) => {\n\t\treturn '%' + c.charCodeAt( 0 ).toString( 16 );\n\t} );\n};\n\n/*\n * Hides all table elements not matching the search parameter.\n */\nconst handleInputChange = function updateTableDisplay() {\n\tconst filter = sanitize( input.value.toUpperCase() );\n\tconst table = document.querySelector( 'table.searchable' );\n\tconst tr = table.getElementsByTagName( 'tr' );\n\tconst searchColumn = ( input.dataset.searchColumn ? input.dataset.searchColumn : 1 );\n\tlet td, i;\n\n\t// Loop through all table rows and hide those that don't match the search.\n\tfor ( i = 0; i < tr.length; i++ ) {\n\t\ttd = tr[ i ].getElementsByTagName( 'td' )[ searchColumn - 1 ];\n\t\tif ( td ) {\n\t\t\tif ( -1 < td.innerHTML.toUpperCase().indexOf( filter ) ) {\n\t\t\t\ttr[ i ].style.display = '';\n\t\t\t} else {\n\t\t\t\ttr[ i ].style.display = 'none';\n\t\t\t}\n\t\t}\n\t}\n};\n\n/*\n * Clears the input field and resets the filtered output.\n */\nconst handleResetSelect = function resetFilter() {\n\tinput.value = '';\n\thandleInputChange();\n};\n\n/*\n * Updates filter results based on a URL parameter.\n */\nasync function handleURLSearchParams() {\n\tif ( 'URLSearchParams' in window ) {\n\t\tconst params = new URLSearchParams( window.location.search );\n\t\tconst filterValue = params.get( 'filter' );\n\n\t\tif ( null !== filterValue ) {\n\t\t\tinput.value = sanitize( filterValue );\n\t\t\tawait handleInputChange();\n\t\t}\n\t}\n}\n\n/**\n * Adds event handlers and URL parameter check.\n */\nexport default function initializeFilter() {\n\tinput.addEventListener( 'keyup', handleInputChange );\n\treset.addEventListener( 'click', handleResetSelect );\n\thandleURLSearchParams();\n}\n"],"sourceRoot":""}